vfdata-otf-ptex for Debian
--------------------------

This package contains virtual font files and macros to use OpenType
fonts in pTeX.

 -- Hisashi MORITA <hisashim@users.sourceforge.net>  Mon, 30 Apr 2007 02:46:16 +0900

Installation
------------

Install the package, if you haven't yet.

  $ sudo dpkg -i vfdata-otf-ptex*.deb

Install appropriate cmap(s) that your document will require.

  $ sudo $EDITOR /etc/apt/sources.list
  $ diff -u /etc/apt/sources.list.bak /etc/apt/sources.list
  -deb http://example.org/pub/linux/debian/debian etch main
  +deb http://example.org/pub/linux/debian/debian etch main contrib non-free
  $ sudo apt-get update && sudo apt-get install cmap-adobe-japan1

Configuration
-------------

Configure dvipdfmx to recognize cmaps.

  $ sudo $EDITOR /etc/texmf/texmf.d/50dvipdfmx.cnf
  $ diff -u /etc/texmf/texmf.d/50dvipdfmx.cnf.bak /etc/texmf/texmf.d/50dvipdfmx.cnf
   %% READ /usr/share/doc/dvipdfmx/README.Debian for details:
  -% CMAPINPUTS = .;/usr/share/fonts/cmap/adobe-gb1//;/usr/share/fonts/cmap/adobe-cns1//;/usr/share/fonts/cmap/gs-cjk-resource//
  +CMAPINPUTS = .;/usr/share/fonts/cmap/adobe-japan1//;/usr/share/fonts/cmap/adobe-japan2//;/usr/share/fonts/cmap/adobe-gb1//;/usr/share/fonts/cmap/adobe-cns1//;/usr/share/fonts/cmap/gs-cjk-resource//
  $ sudo update-texmf

Without appropriate cmaps and correct configuration, you'll get an error
like this: "Can't find encoding file: H".

Testing (without OTF fonts)
--------------------------

Even If you do not have OpenType font installed yet, you can test the
functionality of the package in the following manner.

Prepare non-embedding font map just for testing.

  $ sudo $EDITOR /etc/texmf/dvipdfm/my-pseudo-otf.map
  $ cat /etc/texmf/dvipdfm/my-pseudo-otf.map
  % Non-embedding font map, which works without actual font data.
  % Source: http://oku.edu.mie-u.ac.jp/~okumura/texwiki/?OTF
  rml          H                Ryumin-Light
  rmlv         V                Ryumin-Light
  gbm          H                GothicBBB-Medium
  gbmv         V                GothicBBB-Medium
  hminr-h      H                Ryumin-Light
  hminr-v      V                Ryumin-Light
  otf-ujmr-h   UniJIS-UTF16-H   Ryumin-Light
  otf-ujmr-v   UniJIS-UTF16-V   Ryumin-Light
  otf-cjmr-h   Adobe-Japan1-6   Ryumin-Light
  otf-cjmr-v   Identity-V       Ryumin-Light
  hgothr-h     H                GothicBBB-Medium
  hgothr-v     V                GothicBBB-Medium
  otf-ujgr-h   UniJIS-UTF16-H   GothicBBB-Medium
  otf-ujgr-v   UniJIS-UTF16-V   GothicBBB-Medium
  otf-cjgr-h   Adobe-Japan1-6   GothicBBB-Medium
  otf-cjgr-v   Identity-V       GothicBBB-Medium

Update TeX resource database.

  $ sudo mktexlsr

Prepare some LaTeX document.

  $ $EDITOR test.tex
  $ cat test.tex
  \documentclass{jbook}
  \usepackage{otf}
  \begin{document}
  OpenTypeフォントを使うためのOTFパッケージのテストです。
  \end{document}

Compile the document and generate PDF.

  $ platex test.tex
  $ dvipdfmx -f my-pseudo-otf test.dvi
  $ acroread test.pdf &

Check File > Document Property > Font in Acroread.  Since Ryumin is
specified but not embedded, Kozuka built into Acroread will be used for
display (unless you have Ryumin installed on your computer).

Cleanup.

  $ sudo rm /etc/texmf/dvipdfm/my-pseudo-otf.map
  $ sudo mktexlsr
  $ rm test.{tex,aux,log,dvi,pdf}

Testing (with OTF fonts)
------------------------

Install fonts if you haven't yet (Hiragino is used here for example).

  $ sudo mkdir /usr/share/fonts/opentype
  $ sudo cp HiraMinPro-W3.otf /usr/share/fonts/opentype
  ....

Configure directories so that TeX and dviware recognize the fonts.

  $ sudo ln -s /usr/share/fonts/opentype /usr/share/texmf/fonts/opentype
  $ sudo ln -s /usr/share/texmf/fonts/ /usr/share/texmf/dvipdfm/fonts
  $ sudo mktexlsr

(I am not sure if above is FHS compliant, though.)

Make sure that the fonts can be found on the TeX search path.

  $ kpsewhich -format "opentype fonts" HiraMinPro-W3
  $ kpsewhich -progname "dvipdfm" -show-path "opentype fonts"

Old version of kpsewhich in etch does not recognize format "opentype
fonts". In such cases, try "other binary files" instead.

  $ kpsewhich -format "other binary files" HiraMinPro-W3
  $ kpsewhich -progname "dvipdfm" -show-path "other binary files"

Compile and see.

  $ platex test.tex
  $ dvipdfmx -f hiraginox test.dvi
  $ acroread test.pdf &

This time, you will see Hiragino embedded right.
